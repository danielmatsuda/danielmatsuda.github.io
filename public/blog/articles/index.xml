<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>articles on danielmatsuda</title>
    <link>https://danielmatsuda.github.io/blog/articles/</link>
    <description>Recent content in articles on danielmatsuda</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 28 Nov 2022 18:45:07 -0500</lastBuildDate><atom:link href="https://danielmatsuda.github.io/blog/articles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Articles I found helpful as a junior dev</title>
      <link>https://danielmatsuda.github.io/articles-i-found-helpful-as-a-junior-dev/</link>
      <pubDate>Mon, 28 Nov 2022 18:45:07 -0500</pubDate>
      
      <guid>https://danielmatsuda.github.io/articles-i-found-helpful-as-a-junior-dev/</guid>
      <description>Here are five articles I really liked reading as a junior developer. I&amp;rsquo;ve learned the most by doing things at work, but these articles filled in some gaps for me and helped me build a better, more confident mental model for being an &amp;ldquo;effective engineer&amp;rdquo;.
1. The Thirty Minute Rule When it comes to coding (or anything related to it) there&amp;rsquo;s a rule I believe in with all my heart .</description>
    </item>
    
  </channel>
</rss>
